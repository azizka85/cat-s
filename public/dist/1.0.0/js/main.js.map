{
  "version": 3,
  "sources": ["../../../../src/client/views/pages/loader-page.ts", "../../../../src/client/helpers/view-helpers.ts", "../../../../src/client/views/layouts/default-layout.ts", "../../../../src/client/main.ts"],
  "sourcesContent": ["import { View } from '../view';\r\n\r\nexport class LoaderPage implements View {\r\n  protected static page: LoaderPage | null = null;\r\n\r\n  protected node: HTMLElement | null = null;\r\n\r\n  static get instance(): LoaderPage {\r\n    if(!LoaderPage.page) {\r\n      LoaderPage.page = new LoaderPage();\r\n    }\r\n\r\n    return LoaderPage.page;\r\n  }\r\n\r\n  get elem(): HTMLElement | null {\r\n    return this.node;\r\n  }\r\n\r\n  async init(parent: HTMLElement | null, firstTime: boolean) {\r\n    let content = parent || document.body;\r\n\r\n    this.node = content.querySelector('[data-page=\"loader-page\"]');\r\n\r\n    return content;\r\n  }\r\n}\r\n", "import { Page } from '@azizka/router';\r\n\r\nimport { Translator } from '@azizka/i18n';\r\n\r\nimport { RouteOptions } from '../data/route-options';\r\nimport { RouteState } from '../data/route-state';\r\n\r\nimport { BaseLayout } from '../views/layouts/base-layout';\r\nimport { DefaultLayout } from '../views/layouts/default-layout';\r\n\r\nimport { LoaderPage } from '../views/pages/loader-page';\r\n\r\nimport { toCamel } from '../../helpers';\r\n\r\nimport { layouts as globalLayouts, context, languages, views } from '../globals';\r\n\r\nexport function hideSplash() {\r\n  const splashElem = document.querySelector('.splash');\r\n\r\n  splashElem?.classList.remove('splash-open');   \r\n}\r\n\r\nexport function getExistingLayout(layouts: string[]) {\r\n  const reverseLayouts = [...layouts].reverse();\r\n\r\n  let layout: BaseLayout = DefaultLayout.instance;\r\n\r\n  for(const layoutName of reverseLayouts) {\r\n    if(!(layoutName in globalLayouts) || layout['content'] !== globalLayouts[layoutName]) {      \r\n      break;\r\n    }\r\n\r\n    layout = globalLayouts[layoutName];\r\n  }\r\n\r\n  return layout;\r\n}\r\n\r\nexport async function initLayouts(layouts: string[], parent: HTMLElement | null, firstTime: boolean) {\r\n  const firstLoad: {\r\n    [key: string]: boolean\r\n  } = {};\r\n\r\n  for(const layout of layouts) {\r\n    if(!(layout in globalLayouts)) {\r\n      const module = await import(`./views/layouts/${layout}.js?time=${Date.now()}`) as any;\r\n\r\n      parent = await module[toCamel(layout)]?.instance?.init?.(parent, firstTime);\r\n\r\n      globalLayouts[layout] = module[toCamel(layout)]?.instance;\r\n\r\n      firstLoad[layout] = true;\r\n    }\r\n  }\r\n\r\n  return firstLoad;\r\n}\r\n\r\nexport async function loadLayouts(\r\n  lang: string,\r\n  page: Page<RouteOptions, RouteState>,\r\n  layouts: string[], \r\n  firstLoad: {\r\n    [key: string]: boolean\r\n  }\r\n) {\r\n  const reverseLayouts = [...layouts].reverse();\r\n\r\n  let parentLayout = DefaultLayout.instance;\r\n  \r\n  for(const layout of reverseLayouts) {\r\n    if(parentLayout['content'] !== globalLayouts[layout]) {\r\n      await parentLayout.replaceContent(globalLayouts[layout]);\r\n    }\r\n\r\n    await globalLayouts[layout].load?.(lang, page, firstLoad[layout] ?? false);\r\n\r\n    parentLayout = globalLayouts[layout];\r\n  } \r\n  \r\n  return parentLayout;\r\n}\r\n\r\nexport async function loadPage(\r\n  lang: string,\r\n  page: Page<RouteOptions, RouteState>, \r\n  name: string, \r\n  layouts: string[], \r\n  firstTime: boolean\r\n) {\r\n  context.page = page;\r\n\r\n  let parent: HTMLElement | null = null;\r\n\r\n  let pageFirstLoad = false;\r\n\r\n  if(!firstTime && (!(lang in languages) || !(name in views))) {\r\n    const layout = getExistingLayout(layouts);\r\n\r\n    if(layout['content'] !== LoaderPage.instance) {\r\n      await layout.replaceContent(LoaderPage.instance);\r\n    }\r\n  } \r\n\r\n  if(!(lang in languages)) {\r\n    const module = await import(`./locales/${lang}.js?time=${Date.now()}`);\r\n\r\n    languages[lang] = Translator.create(module.default);\r\n  }\r\n\r\n  context.tr = languages[lang].translate.bind(languages[lang]);\r\n\r\n  document.documentElement.lang = lang;\r\n  document.title = context.tr('Catalog of Services');\r\n\r\n  if(!(name in views)) {       \r\n    const module = await import(`./views/${name}.js?time=${Date.now()}`) as any;\r\n\r\n    parent = await module[toCamel(name)]?.instance?.init?.(parent, firstTime);\r\n\r\n    views[name] = module[toCamel(name)]?.instance;\r\n\r\n    pageFirstLoad = true;\r\n  }\r\n\r\n  const firstLoad = await initLayouts(layouts, parent, firstTime);\r\n\r\n  if(context.page.fragment === page.fragment) {\r\n    const layout = await loadLayouts(lang, page, layouts, firstLoad);    \r\n\r\n    if(layout['content'] !== views[name]) {\r\n      await layout.replaceContent(views[name]);\r\n    }\r\n\r\n    await views[name].load?.(lang, page, pageFirstLoad);\r\n  }\r\n\r\n  if(firstTime) {\r\n    hideSplash();\r\n  }\r\n}\r\n", "import { BaseLayout } from \"./base-layout\";\r\n\r\nexport class DefaultLayout extends BaseLayout {\r\n  protected static layout: DefaultLayout | null = null;    \r\n\r\n  static get instance(): DefaultLayout {\r\n    if(!DefaultLayout.layout) {\r\n      DefaultLayout.layout = new DefaultLayout();\r\n    }\r\n\r\n    return DefaultLayout.layout;\r\n  }\r\n}\r\n", "import { LoaderPage } from './views/pages/loader-page';\r\n\r\nimport { loadPage } from './helpers/view-helpers';\r\n\r\nimport { localeRoute } from '../helpers';\r\n\r\nimport { router, routeNavigator } from './globals';\r\nimport { DEFAULT_LANGUAGE } from '../globals';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  let firstTime = true;    \r\n\r\n  LoaderPage.instance.init(null, firstTime);\r\n\r\n  router.addRoutes([{\r\n    rule: `${localeRoute}/?`,\r\n    async handler(page) {\r\n      await loadPage(\r\n        page.match?.[0] || DEFAULT_LANGUAGE,\r\n        page, \r\n        'home-page', \r\n        ['main-layout'],\r\n        firstTime\r\n      );\r\n    }\r\n  }, {\r\n    rule: `${localeRoute}/?sign-in`,\r\n    async handler(page) {\r\n      await loadPage(\r\n        page.match?.[0] || DEFAULT_LANGUAGE,\r\n        page, \r\n        'sign-in-page', \r\n        [], \r\n        firstTime\r\n      );\r\n    }\r\n  }, {\r\n    rule: `${localeRoute}/?sign-up`,\r\n    async handler(page) {\r\n      await loadPage(\r\n        page.match?.[0] || DEFAULT_LANGUAGE,\r\n        page, \r\n        'sign-up-page', \r\n        [], \r\n        firstTime\r\n      );\r\n    }\r\n  }]);\r\n\r\n  routeNavigator.addUriListener();\r\n\r\n  router\r\n    .processUrl(routeNavigator.fragment, routeNavigator.query)\r\n    .catch(\r\n      reason => console.error(reason)      \r\n    )\r\n    .finally(() => firstTime = false);\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAEO,wBAAiC;AAAA,EAG5B,OAA2B;AAAA,aAE1B,WAAuB;AAChC,QAAG,CAAC,YAAW,MAAM;AACnB,kBAAW,OAAO,IAAI;AAAA;AAGxB,WAAO,YAAW;AAAA;AAAA,MAGhB,OAA2B;AAC7B,WAAO,KAAK;AAAA;AAAA,QAGR,KAAK,QAA4B,WAAoB;AACzD,QAAI,UAAU,UAAU,SAAS;AAEjC,SAAK,OAAO,QAAQ,cAAc;AAElC,WAAO;AAAA;AAAA;AAtBJ;AACY,cADZ,YACY,QAA0B;;;ACD7C,kBAA2B;;;ACApB,mCAA4B,WAAW;AAAA,aAGjC,WAA0B;AACnC,QAAG,CAAC,eAAc,QAAQ;AACxB,qBAAc,SAAS,IAAI;AAAA;AAG7B,WAAO,eAAc;AAAA;AAAA;AARlB;AACY,cADZ,eACY,UAA+B;;;ADa3C,sBAAsB;AAC3B,QAAM,aAAa,SAAS,cAAc;AAE1C,cAAY,UAAU,OAAO;AAAA;AAGxB,2BAA2B,UAAmB;AACnD,QAAM,iBAAiB,CAAC,GAAG,UAAS;AAEpC,MAAI,SAAqB,cAAc;AAEvC,aAAU,cAAc,gBAAgB;AACtC,QAAG,CAAE,eAAc,YAAkB,OAAO,eAAe,QAAc,aAAa;AACpF;AAAA;AAGF,aAAS,QAAc;AAAA;AAGzB,SAAO;AAAA;AAGT,2BAAkC,UAAmB,QAA4B,WAAoB;AACnG,QAAM,YAEF;AAEJ,aAAU,UAAU,UAAS;AAC3B,QAAG,CAAE,WAAU,UAAgB;AAC7B,YAAM,SAAS,MAAM,OAAO,mBAAmB,kBAAkB,KAAK;AAEtE,eAAS,MAAM,OAAO,QAAQ,UAAU,UAAU,OAAO,QAAQ;AAEjE,cAAc,UAAU,OAAO,QAAQ,UAAU;AAEjD,gBAAU,UAAU;AAAA;AAAA;AAIxB,SAAO;AAAA;AAGT,2BACE,MACA,MACA,UACA,WAGA;AACA,QAAM,iBAAiB,CAAC,GAAG,UAAS;AAEpC,MAAI,eAAe,cAAc;AAEjC,aAAU,UAAU,gBAAgB;AAClC,QAAG,aAAa,eAAe,QAAc,SAAS;AACpD,YAAM,aAAa,eAAe,QAAc;AAAA;AAGlD,UAAM,QAAc,QAAQ,OAAO,MAAM,MAAM,UAAU,WAAW;AAEpE,mBAAe,QAAc;AAAA;AAG/B,SAAO;AAAA;AAGT,wBACE,MACA,MACA,MACA,UACA,WACA;AACA,UAAQ,OAAO;AAEf,MAAI,SAA6B;AAEjC,MAAI,gBAAgB;AAEpB,MAAG,CAAC,aAAc,EAAE,SAAQ,cAAc,CAAE,SAAQ,SAAS;AAC3D,UAAM,SAAS,kBAAkB;AAEjC,QAAG,OAAO,eAAe,WAAW,UAAU;AAC5C,YAAM,OAAO,eAAe,WAAW;AAAA;AAAA;AAI3C,MAAG,CAAE,SAAQ,YAAY;AACvB,UAAM,SAAS,MAAM,OAAO,aAAa,gBAAgB,KAAK;AAE9D,cAAU,QAAQ,uBAAW,OAAO,OAAO;AAAA;AAG7C,UAAQ,KAAK,UAAU,MAAM,UAAU,KAAK,UAAU;AAEtD,WAAS,gBAAgB,OAAO;AAChC,WAAS,QAAQ,QAAQ,GAAG;AAE5B,MAAG,CAAE,SAAQ,QAAQ;AACnB,UAAM,SAAS,MAAM,OAAO,WAAW,gBAAgB,KAAK;AAE5D,aAAS,MAAM,OAAO,QAAQ,QAAQ,UAAU,OAAO,QAAQ;AAE/D,UAAM,QAAQ,OAAO,QAAQ,QAAQ;AAErC,oBAAgB;AAAA;AAGlB,QAAM,YAAY,MAAM,YAAY,UAAS,QAAQ;AAErD,MAAG,QAAQ,KAAK,aAAa,KAAK,UAAU;AAC1C,UAAM,SAAS,MAAM,YAAY,MAAM,MAAM,UAAS;AAEtD,QAAG,OAAO,eAAe,MAAM,OAAO;AACpC,YAAM,OAAO,eAAe,MAAM;AAAA;AAGpC,UAAM,MAAM,MAAM,OAAO,MAAM,MAAM;AAAA;AAGvC,MAAG,WAAW;AACZ;AAAA;AAAA;;;AEjIJ,OAAO,iBAAiB,oBAAoB,MAAM;AAChD,MAAI,YAAY;AAEhB,aAAW,SAAS,KAAK,MAAM;AAE/B,SAAO,UAAU,CAAC;AAAA,IAChB,MAAM,GAAG;AAAA,UACH,QAAQ,MAAM;AAClB,YAAM,SACJ,KAAK,QAAQ,MAAM,kBACnB,MACA,aACA,CAAC,gBACD;AAAA;AAAA,KAGH;AAAA,IACD,MAAM,GAAG;AAAA,UACH,QAAQ,MAAM;AAClB,YAAM,SACJ,KAAK,QAAQ,MAAM,kBACnB,MACA,gBACA,IACA;AAAA;AAAA,KAGH;AAAA,IACD,MAAM,GAAG;AAAA,UACH,QAAQ,MAAM;AAClB,YAAM,SACJ,KAAK,QAAQ,MAAM,kBACnB,MACA,gBACA,IACA;AAAA;AAAA;AAKN,iBAAe;AAEf,SACG,WAAW,eAAe,UAAU,eAAe,OACnD,MACC,YAAU,QAAQ,MAAM,SAEzB,QAAQ,MAAM,YAAY;AAAA;",
  "names": []
}
