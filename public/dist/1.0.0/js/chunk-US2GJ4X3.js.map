{
  "version": 3,
  "sources": ["../../../../src/client/views/layouts/base-layout.ts", "../../../../src/helpers.ts"],
  "sourcesContent": ["import { View } from \"../view\";\r\n\r\nimport { mount, unmount } from '../../helpers';\r\n\r\nexport class BaseLayout {\r\n  protected content: View | null = null;\r\n\r\n  async replaceContent(content: View) {\r\n    if(this.content?.replaceSelf) {\r\n      this.content.replaceSelf(content);\r\n    } else {\r\n      await this.content?.unmount?.();\r\n      await unmount(this.content?.elem || null);\r\n\r\n      this.content?.elem?.replaceWith(content.elem || '');\r\n      \r\n      await content.mount?.();\r\n      await mount(content.elem);\r\n    }\r\n\r\n    this.content = content;\r\n  }\r\n}\r\n", "import { trimSlashes } from '@azizka/router';\r\n\r\nimport { LANGUAGES } from './globals';\r\n\r\nexport function getQueryParameters(\r\n  query: {[key: string]: string}\r\n) {\r\n  const parameters: string[] = [];\r\n\r\n  for(let key of Object.keys(query)) {\r\n    if(query[key]) {\r\n      parameters.push(`${key}=${query[key]}`);\r\n    } else {\r\n      parameters.push(key);\r\n    }\r\n  }\r\n\r\n  return parameters.join('&');  \r\n}\r\n\r\nexport function setQueryParameter(\r\n  query: {[key: string]: string}, \r\n  parameter: string, \r\n  value: string\r\n) {\r\n  const data = {...query};\r\n\r\n  data[parameter] = value;\r\n\r\n  return getQueryParameters(data);\r\n}\r\n\r\nexport function toggleQueryParameter(\r\n  query: {[key: string]: string}, \r\n  parameter: string\r\n) {\r\n  const data = {...query};\r\n\r\n  if(parameter in data) {\r\n    delete data[parameter];\r\n\r\n    return getQueryParameters(data);\r\n  }\r\n\r\n  return setQueryParameter(data, parameter, '1');\r\n}\r\n\r\nexport function capitalize(input: string) {\r\n  if(!input) {\r\n    return input;\r\n  }\r\n\r\n  const chars = input.split('');\r\n\r\n  return chars[0].toUpperCase() + chars.slice(1).join('').toLowerCase();\r\n}\r\n\r\nexport function toCamel(input: string) {\r\n  const parts = input.split('-');\r\n\r\n  return parts.map(item => capitalize(item)).join('');\r\n}\r\n\r\nexport const localeRoute = `(${Object.keys(LANGUAGES).join('|')})?`;\r\n\r\nexport function changeLangPath(url: string, lang: string) {\r\n  url = trimSlashes(url);\r\n\r\n  const langRoute = new RegExp(`^(${Object.keys(LANGUAGES).join('|')})`);\r\n\r\n  const index = url.search(langRoute);\r\n\r\n  if(index >= 0) {\r\n    return url.replace(langRoute, lang)\r\n  }\r\n\r\n  return `${lang}/${url}`;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;AAIO,uBAAiB;AAAA,EACZ,UAAuB;AAAA,QAE3B,eAAe,SAAe;AAClC,QAAG,KAAK,SAAS,aAAa;AAC5B,WAAK,QAAQ,YAAY;AAAA,WACpB;AACL,YAAM,KAAK,SAAS;AACpB,YAAM,QAAQ,KAAK,SAAS,QAAQ;AAEpC,WAAK,SAAS,MAAM,YAAY,QAAQ,QAAQ;AAEhD,YAAM,QAAQ;AACd,YAAM,MAAM,QAAQ;AAAA;AAGtB,SAAK,UAAU;AAAA;AAAA;;;ACpBnB,oBAA4B;AAIrB,4BACL,OACA;AACA,QAAM,aAAuB;AAE7B,WAAQ,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAG,MAAM,MAAM;AACb,iBAAW,KAAK,GAAG,OAAO,MAAM;AAAA,WAC3B;AACL,iBAAW,KAAK;AAAA;AAAA;AAIpB,SAAO,WAAW,KAAK;AAAA;AAGlB,2BACL,OACA,WACA,OACA;AACA,QAAM,OAAO,KAAI;AAEjB,OAAK,aAAa;AAElB,SAAO,mBAAmB;AAAA;AAGrB,8BACL,OACA,WACA;AACA,QAAM,OAAO,KAAI;AAEjB,MAAG,aAAa,MAAM;AACpB,WAAO,KAAK;AAEZ,WAAO,mBAAmB;AAAA;AAG5B,SAAO,kBAAkB,MAAM,WAAW;AAAA;AAGrC,oBAAoB,OAAe;AACxC,MAAG,CAAC,OAAO;AACT,WAAO;AAAA;AAGT,QAAM,QAAQ,MAAM,MAAM;AAE1B,SAAO,MAAM,GAAG,gBAAgB,MAAM,MAAM,GAAG,KAAK,IAAI;AAAA;AAGnD,iBAAiB,OAAe;AACrC,QAAM,QAAQ,MAAM,MAAM;AAE1B,SAAO,MAAM,IAAI,UAAQ,WAAW,OAAO,KAAK;AAAA;AAG3C,IAAM,cAAc,IAAI,OAAO,KAAK,WAAW,KAAK;AAEpD,wBAAwB,KAAa,MAAc;AACxD,QAAM,+BAAY;AAElB,QAAM,YAAY,IAAI,OAAO,KAAK,OAAO,KAAK,WAAW,KAAK;AAE9D,QAAM,QAAQ,IAAI,OAAO;AAEzB,MAAG,SAAS,GAAG;AACb,WAAO,IAAI,QAAQ,WAAW;AAAA;AAGhC,SAAO,GAAG,QAAQ;AAAA;",
  "names": []
}
